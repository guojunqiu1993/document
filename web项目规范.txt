web项目规范

命名规范：

1.项目命名

  .文件夹和文件首先采用翻译的英文命名，其次采用拼音命名；
  .样式文件、脚本文件、配置文件采用驼峰命名法 （如constrollsFile.js、checkBand.js）
  .页面文件采用组合命名法（check-band.htm、btn-close.jpg）

2.项目规范

  1.html
   .优先使用双引号
   .样式应该放在head内，脚本引用放在body末尾
   .代码块缩进使用4个空格，保持一个块开始和结束在同一条直线
   .页面结构清晰，尽量减少布局嵌套
   .避免直接多dom写样式（行内样式）

  pc端
   .采用兼容模式，选择性使用html5的新特性和新标签
   .需兼容谷歌18+、safari5.1+、火狐11+、OPERA11+、IE9+及国内webkit内核和IE内核浏览器
   .需要自适应13.3（1366 x 768）至27英寸 （1920 x 1080） 的显示器

  移动端
   .需自适应4寸（640 x 1136）至1280宽的移动端屏幕，项目宽度最大为640px
   .meta标签添加移动端属性

  2.css
    .代码块缩进使用4个空格，保持一个块开始和结束在同一条直线
    .css采用简短写法
    .pc端部分兼容样式使用-moz-、-webkit、-o-、-ms-兼容各个浏览器

  3.js
   
   3.1基础规范

    .文件编码统一为utf-8
    .优先采用“===”全等符号代替“==”
    .避免大量使用全局变量和全局函数，而使用块级变量
    .实例化数组和对象采用[]和{}，避免使用new关键字，其他数据结构采用new关键字（如map、image）
    .web端项目采用严格模式
    .变量必须声明后才能使用
    .函数的参数不能有同名属性
    .不对自读属性赋值
    .优化循环，勿在循环中操作Dom，勿在循环中写具体函数
    .在类、方法、模块等块级代码前注释描述
    .自定义库需在库前注释作用、接口参数等配置信息，修改第三方库必须在不影响原有功能的前提下修改

   3.2  ES6
     .const声明常量、let声明变量
     .优先采用结构赋值
     .对象属性和方法,尽量使用简洁表达式
     .避免在块级作用域声明函数
     .使用扩展运算符 ... 来拷贝数组
     .简单的、单行的、不会复用的函数，建议采用箭头函数，如果函数体较为复杂、行数多，可以采用传统的函数写法
     .如果模块是一个输出值，使用export default，并使用import引入相关模块资源
     .使用async函数，进行异步操作

